import requests
import datetime
from flask import Flask, request, jsonify

app = Flask(__name__)

# üîë –î–∞–Ω–Ω—ã–µ –¥–ª—è Telegram
TELEGRAM_BOT_TOKEN = "7788946008:AAGULYh-GIkpr-GA3ZA70ERdCAT6BcGNW-g"
CHAT_ID = "-1002307069728"

# üåç –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã (–∫–∞–∂–¥—ã–π —Ä–∞–∑ –¥–µ–ª–∞–µ—Ç –Ω–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å)
def fetch_weather(city):
    geocode_url = f"https://geocoding-api.open-meteo.com/v1/search?name={city}&count=1&format=json"
    geocode_response = requests.get(geocode_url)
    geocode_data = geocode_response.json()

    if "results" not in geocode_data:
        return {"error": "–ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω"}

    lat = geocode_data["results"][0]["latitude"]
    lon = geocode_data["results"][0]["longitude"]

    weather_url = f"https://api.open-meteo.com/v1/forecast?latitude={lat}&longitude={lon}&hourly=temperature_2m,relative_humidity_2m,wind_speed_10m&timezone=auto"
    weather_response = requests.get(weather_url)
    weather_data = weather_response.json()

    if "hourly" not in weather_data:
        return {"error": "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ"}

    temp = round(weather_data["hourly"]["temperature_2m"][0])
    humidity = weather_data["hourly"]["relative_humidity_2m"][0]
    wind_speed = round(weather_data["hourly"]["wind_speed_10m"][0])

    # –î–æ–±–∞–≤–ª—è–µ–º –≤—Ä–µ–º—è –∑–∞–ø—Ä–æ—Å–∞
    timestamp = datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")

    return {
        "city": city,
        "temperature": f"{temp}¬∞C",
        "humidity": f"{humidity}%",
        "wind_speed": f"{wind_speed} km/h",
        "timestamp": timestamp
    }

# üì° –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram
def send_telegram_message(message):
    telegram_url = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/sendMessage"
    payload = {
        "chat_id": CHAT_ID,
        "text": message
    }
    requests.post(telegram_url, json=payload)

# üöÄ API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã
@app.route('/weather', methods=['POST'])
def weather():
    data = request.get_json()
    city = data.get("city", "")

    if not city:
        return jsonify({"error": "City is required"}), 400

    weather_data = fetch_weather(city)

    if "error" not in weather_data:
        message = (
            f"–î–∞–Ω–Ω—ã–µ –∏–∑ OpenAI\n"
            f"üåç –ü–æ–≥–æ–¥–∞ –≤ {weather_data['city']}:\n"
            f"üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {weather_data['temperature']}\n"
            f"üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å: {weather_data['humidity']}\n"
            f"üí® –í–µ—Ç–µ—Ä: {weather_data['wind_speed']}\n"
            f"‚è± –í—Ä–µ–º—è –∑–∞–ø—Ä–æ—Å–∞: {weather_data['timestamp']}"
        )
        send_telegram_message(message)

    return weather_data["city"] + " | " + weather_data["temperature"] + " | " + weather_data["humidity"] + " | " + weather_data["wind_speed"] + " | " + weather_data["timestamp"]

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=10000)
